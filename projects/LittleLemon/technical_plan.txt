TECHNICAL PLAN

# PROJECT & APP SET-UP
Create a project directory called “LittleLemon” ✅
Inside this directory in the VS Code terminal, activate the virtual environment. E.g. `pipenv shell`  and install the pipenv dependencies `pipenv install` ✅
cd to the new project directory and install Django. E.g. pipenv install django. Check Django is installed using pip show django ✅
Activate the virtual environment (using pipenv shell) ✅
Create Django project using django-admin startproject LittleLemon ✅
Create Django API app, LittleLemonAPI and add to settings.py (using python manage.py startapp LittleLemonAPI) ✅
Install DRF (using pipenv install djangorestframework) and add 'rest_framework' to the list of installed apps ✅
Run migrations (using python manage.py makemigrations and migrate) to craete the db.sqlite3 db ✅
Run the server and check you can browse to thelocalhost 8000 port -> Success rocket page should be displayed ✅
Install Djoser etc, then save changes to GitHub

# CREATE MODELS


# CREATE VIEWS


# CREATE SERIALIZERS


# MAP ROUTES

# CREATE USERS & GROUPS
- Create Managers
- Create Delivery Crew
- Create Customers
- Create groups (which ones?)
- Assign users to relevant group. (Note: Users without a group are customers)


# Create test data  
- E.g. Menu items
- Orders

# FORM VALIDATION


# IMPLEMENT THROTTLING


# IMPLEMENT PAGINATION


# IMPLEMENT FILTERING, SEARCHING AND ORDERING


# IMPLEMENT user authentication (Djsoer token-based)


# IMPLEMENT USER authorization (privileges)


# EXECUTE TEST CASES TO ENSURE BUSINESS REQUIREMENTS HAVE BEEN MET  
- And add extra test cases, as needed for testing authorization, validation and negative test cases/bad input




